

public class Empregado {
    private String nome;
    private int idade;
    private double salario;

    public Empregado(String nome, int idade, double salario) {
        this.nome = nome;
        this.idade = idade;
        this.salario = salario;
    }

    // Métodos Getters e Setters
    public String getNome() {
        return nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public int getIdade() {
        return idade;
    }

    public void setIdade(int idade) {
        this.idade = idade;
    }

    public double getSalario() {
        return salario;
    }

    public void setSalario(double salario) {
        this.salario = salario;
    }

    // Método toString
    @Override
    public String toString() {
        return "Empregado{" +
                "nome='" + nome + '\'' +
                ", idade=" + idade +
                ", salario=" + salario +
                '}';
    }

    // Método promover
    public void promover() {
        if (idade > 18) {
            aumentarSalario(25);
        } else {
            System.out.println("Empregado não atende aos requisitos de idade para promoção.");
        }
    }

    // Método aumentarSalario
    public void aumentarSalario(double percentual) {
        salario += salario * (percentual / 100);
    }

    // Método demitir
    public void demitir(int motivo) {
        switch (motivo) {
            case 1: // Justa causa
                System.out.println("Empregado demitido por justa causa. Aviso prévio a ser cumprido.");
                break;
            case 2: // Decisão do empregador
                double multa = salario * 0.4;
                salario -= multa;
                System.out.println("Empregado demitido por decisão do empregador. Multa de 40% do salário: " + multa);
                break;
            case 3: // Aposentadoria
                double salarioAposentadoria = 0;
                if (salario >= 1000 && salario < 2000) {
                    salarioAposentadoria = 1500;
                } else if (salario >= 2000 && salario < 3000) {
                    salarioAposentadoria = 2500;
                }
                System.out.println("Empregado aposentado. Salário de aposentadoria: " + salarioAposentadoria);
                salario = salarioAposentadoria;
                break;
            default:
                System.out.println("Motivo de demissão inválido.");
        }
    }

    // Método fazerAniversario
    public void fazerAniversario() {
        idade++;
    }

    public static void main(String[] args) {
        Empregado empregado = new Empregado("Fulano", 25, 2000);
        System.out.println(empregado);

        empregado.promover();
        System.out.println(empregado);

        empregado.demitir(2);
        System.out.println(empregado);

        empregado.fazerAniversario();
        System.out.println(empregado);
    }
}
